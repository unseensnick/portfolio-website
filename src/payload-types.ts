/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    tags: Tag;
    navigationLinks: NavigationLink;
    portfolio: Portfolio;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    navigationLinks: NavigationLinksSelect<false> | NavigationLinksSelect<true>;
    portfolio: PortfolioSelect<false> | PortfolioSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  /**
   * Your full name for personalization
   */
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  _key?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  /**
   * The name of the technology, skill, or interest (e.g., 'React', 'UI Design', 'Photography')
   */
  name: string;
  /**
   * Categorize this tag to organize how it's used across your portfolio
   */
  category: 'technology & tools' | 'hobbies';
  /**
   * Optional description or notes about this tag for your reference
   */
  description?: string | null;
  /**
   * Optional color theme for displaying this tag on your portfolio
   */
  color?: ('default' | 'blue' | 'green' | 'purple' | 'orange' | 'red' | 'yellow' | 'pink') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigationLinks".
 */
export interface NavigationLink {
  id: number;
  /**
   * Text to display for this navigation link (e.g., 'About', 'Projects', 'Contact')
   */
  label: string;
  /**
   * URL or anchor link (e.g., '#about', '/contact', 'https://github.com/username')
   */
  href: string;
  /**
   * Categorize this link to organize how it's used across your portfolio
   */
  category: 'main' | 'social';
  /**
   * Optional icon name from Lucide icons library (e.g., 'user', 'github', 'mail')
   */
  icon?: string | null;
  /**
   * Order in which this link appears in navigation (lower numbers appear first)
   */
  order?: number | null;
  /**
   * Check if this link opens in a new tab (for external URLs)
   */
  external?: boolean | null;
  /**
   * Optional description or notes about this link for your reference
   */
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio".
 */
export interface Portfolio {
  id: number;
  title: string;
  /**
   * Configure your site navigation, logo, and main branding elements
   */
  nav: {
    /**
     * Main text for your hexagon logo
     */
    logo: string;
    /**
     * Character position where gradient effect starts
     */
    logoSplitAt?: number | null;
    /**
     * Subtitle displayed below your logo
     */
    subtitle: string;
    /**
     * Select navigation links to display in the main menu
     */
    navigationLinks?: (number | NavigationLink)[] | null;
  };
  /**
   * Configure the main hero section at the top of your website - the first thing visitors see
   */
  hero: {
    /**
     * Small greeting text displayed above the main title
     */
    greeting: string;
    /**
     * Main title/headline of your hero section
     */
    heroTitle: string;
    /**
     * Brief description about yourself or your services
     */
    heroDescription: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    /**
     * Select your GitHub link from social navigation links
     */
    githubUrl?: (number | null) | NavigationLink;
    heroMedia?: {
      /**
       * Upload the hero image for this section
       */
      image?: (number | null) | Media;
      /**
       * Controls how the image is positioned within its container when cropped
       */
      imagePosition?:
        | ('center' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right')
        | null;
      /**
       * Controls the aspect ratio of the image
       */
      aspectRatio?: ('landscape' | 'portrait' | 'square' | '5/4' | '3/2' | '4/3') | null;
      /**
       * Scale the image (50-200%). Leave empty for default size.
       */
      imageZoom?: number | null;
      /**
       * Horizontal position (0-100%). Leave empty to use preset position. 0 = left edge, 50 = center, 100 = right edge
       */
      x?: number | null;
      /**
       * Vertical position (0-100%). Leave empty to use preset position. 0 = top edge, 50 = center, 100 = bottom edge
       */
      y?: number | null;
    };
  };
  /**
   * Configure your portfolio projects section - showcase your best work
   */
  projects: {
    /**
     * Title for the projects section
     */
    projectsTitle: string;
    /**
     * Brief introduction to your projects section
     */
    projectsDescription: string;
    /**
     * Your portfolio projects. The first project in this list will be displayed as the featured project.
     */
    items?:
      | {
          /**
           * Title of this project
           */
          itemTitle: string;
          /**
           * Detailed description of this project
           */
          content?: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          /**
           * Select live demo link from social navigation links
           */
          projectUrl?: (number | null) | NavigationLink;
          /**
           * Select source code repository link from social navigation links
           */
          codeUrl?: (number | null) | NavigationLink;
          /**
           * Select technologies used in this project from your tags list
           */
          technologies?: (number | Tag)[] | null;
          /**
           * Add multiple images and/or videos for this project. If you add multiple items, they will be displayed in a carousel.
           */
          media?:
            | {
                /**
                 * Screenshot or thumbnail of your project (used as fallback or video poster)
                 */
                image?: (number | null) | Media;
                /**
                 * Controls how the image is positioned within its container when cropped
                 */
                imagePosition?:
                  | (
                      | 'center'
                      | 'top'
                      | 'bottom'
                      | 'left'
                      | 'right'
                      | 'top-left'
                      | 'top-right'
                      | 'bottom-left'
                      | 'bottom-right'
                    )
                  | null;
                /**
                 * Controls the aspect ratio of this media item. Applies to both images and videos.
                 */
                aspectRatio?: ('landscape' | 'portrait' | 'square' | '5/4' | '3/2' | '4/3') | null;
                /**
                 * Scale the image (50-200%). Leave empty for default size. Useful for fitting images better within the aspect ratio.
                 */
                imageZoom?: number | null;
                /**
                 * Precise positioning control (overrides preset position when values are set). Leave empty to use preset position above.
                 */
                imageFinePosition?: {
                  /**
                   * Horizontal position (0-100%). Leave empty to use preset position. 0 = left edge, 50 = center, 100 = right edge
                   */
                  x?: number | null;
                  /**
                   * Vertical position (0-100%). Leave empty to use preset position. 0 = top edge, 50 = center, 100 = bottom edge
                   */
                  y?: number | null;
                };
                video?: {
                  /**
                   * YouTube URL for embedding video demos of your projects.
                   */
                  src?: string | null;
                  /**
                   * Alternative: Upload a video file directly (will override URL if both provided)
                   */
                  file?: (number | null) | Media;
                  /**
                   * Optional: Title displayed above the video player
                   */
                  title?: string | null;
                  /**
                   * Optional: Description displayed below the video title
                   */
                  description?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Text displayed above the 'View All on GitHub' button
     */
    viewMoreText?: string | null;
    /**
     * Select link to view all projects from social navigation links
     */
    viewAllLink?: (number | null) | NavigationLink;
  };
  /**
   * Configure the about section of your portfolio - tell your story and showcase your skills
   */
  about: {
    /**
     * Title for the about section
     */
    aboutTitle: string;
    /**
     * Text content describing yourself and your background
     */
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    /**
     * Heading for the technologies/skills subsection
     */
    technologiesHeading: string;
    /**
     * Select technologies and skills you're proficient with from your tags list
     */
    technologies?: (number | Tag)[] | null;
    /**
     * Heading for the interests/hobbies subsection
     */
    interestsHeading: string;
    /**
     * Select your interests and hobbies from your tags list
     */
    interests?: (number | Tag)[] | null;
    aboutMedia?: {
      /**
       * Upload your profile image for this section
       */
      image?: (number | null) | Media;
      /**
       * Controls how the image is positioned within its container when cropped
       */
      imagePosition?:
        | ('center' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right')
        | null;
      /**
       * Controls the aspect ratio of the image
       */
      aspectRatio?: ('landscape' | 'portrait' | 'square' | '5/4' | '3/2' | '4/3') | null;
      /**
       * Scale the image (50-200%). Leave empty for default size.
       */
      imageZoom?: number | null;
      /**
       * Horizontal position (0-100%). Leave empty to use preset position. 0 = left edge, 50 = center, 100 = right edge
       */
      x?: number | null;
      /**
       * Vertical position (0-100%). Leave empty to use preset position. 0 = top edge, 50 = center, 100 = bottom edge
       */
      y?: number | null;
    };
  };
  /**
   * Configure the contact section of your portfolio - make it easy for people to reach you
   */
  contact: {
    /**
     * Title for the contact section
     */
    contactTitle: string;
    /**
     * Brief introduction to your contact section
     */
    contactDescription: string;
    /**
     * Subtitle text displayed on the email contact card
     */
    emailSubtitle: string;
    /**
     * Select your email contact from social navigation links
     */
    email?: (number | null) | NavigationLink;
    /**
     * Subtitle text displayed on the GitHub contact card
     */
    githubSubtitle: string;
    /**
     * Select your GitHub profile from social navigation links
     */
    github?: (number | null) | NavigationLink;
    /**
     * Title for the call-to-action card
     */
    ctaTitle: string;
    /**
     * Description text for the call-to-action card
     */
    ctaDescription: string;
  };
  /**
   * Configure the footer section of your portfolio - copyright and final details
   */
  footer: {
    /**
     * Copyright notice displayed in the footer
     */
    copyright: string;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'navigationLinks';
        value: number | NavigationLink;
      } | null)
    | ({
        relationTo: 'portfolio';
        value: number | Portfolio;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  _key?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  category?: T;
  description?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigationLinks_select".
 */
export interface NavigationLinksSelect<T extends boolean = true> {
  label?: T;
  href?: T;
  category?: T;
  icon?: T;
  order?: T;
  external?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "portfolio_select".
 */
export interface PortfolioSelect<T extends boolean = true> {
  title?: T;
  nav?:
    | T
    | {
        logo?: T;
        logoSplitAt?: T;
        subtitle?: T;
        navigationLinks?: T;
      };
  hero?:
    | T
    | {
        greeting?: T;
        heroTitle?: T;
        heroDescription?: T;
        githubUrl?: T;
        heroMedia?:
          | T
          | {
              image?: T;
              imagePosition?: T;
              aspectRatio?: T;
              imageZoom?: T;
              x?: T;
              y?: T;
            };
      };
  projects?:
    | T
    | {
        projectsTitle?: T;
        projectsDescription?: T;
        items?:
          | T
          | {
              itemTitle?: T;
              content?: T;
              projectUrl?: T;
              codeUrl?: T;
              technologies?: T;
              media?:
                | T
                | {
                    image?: T;
                    imagePosition?: T;
                    aspectRatio?: T;
                    imageZoom?: T;
                    imageFinePosition?:
                      | T
                      | {
                          x?: T;
                          y?: T;
                        };
                    video?:
                      | T
                      | {
                          src?: T;
                          file?: T;
                          title?: T;
                          description?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        viewMoreText?: T;
        viewAllLink?: T;
      };
  about?:
    | T
    | {
        aboutTitle?: T;
        content?: T;
        technologiesHeading?: T;
        technologies?: T;
        interestsHeading?: T;
        interests?: T;
        aboutMedia?:
          | T
          | {
              image?: T;
              imagePosition?: T;
              aspectRatio?: T;
              imageZoom?: T;
              x?: T;
              y?: T;
            };
      };
  contact?:
    | T
    | {
        contactTitle?: T;
        contactDescription?: T;
        emailSubtitle?: T;
        email?: T;
        githubSubtitle?: T;
        github?: T;
        ctaTitle?: T;
        ctaDescription?: T;
      };
  footer?:
    | T
    | {
        copyright?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}